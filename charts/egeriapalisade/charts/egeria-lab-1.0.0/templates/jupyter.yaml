# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the Egeria project.
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: {{ include "myapp.name" . }}
    helm.sh/chart: {{ include "myapp.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: jupyter
  name: {{ include "myapp.fullname" . }}-jupyter

spec:
  type: {{ .Values.service.type }}
  ports:
    - port: 8888
      targetPort: 8888
      nodePort: {{ .Values.service.nodeport.jupyter }}
  selector:
    app.kubernetes.io/name: {{ include "myapp.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: jupyter
...
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: {{ include "myapp.fullname" . }}-jupyter
  labels:
    app.kubernetes.io/name: {{ include "myapp.name" . }}
    helm.sh/chart: {{ include "myapp.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: jupyter

spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "myapp.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: jupyter
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: {{ include "myapp.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: jupyter
    spec:
      securityContext:
        fsGroup: 100
      containers:
        - name: jupyter
          image: "{{ if (.Values.image.jupyter.namespace | default .Values.imageDefaults.namespace) }}{{ .Values.image.jupyter.namespace | default .Values.imageDefaults.namespace }}/{{ end }}\
                  {{ .Values.image.jupyter.name }}\
                  :{{ .Values.image.jupyter.tag | default .Values.imageDefaults.tag }}"
          imagePullPolicy: {{ .Values.image.jupyter.pullPolicy | default .Values.imageDefaults.pullPolicy }}
          command:
            - "start.sh"
          args:
            - jupyter
            - lab
            - "--NotebookApp.token=''"
          env:
            - name: corePlatformURL
              value: "http://{{ .Release.Name }}-{{ include "myapp.name" . }}-core:8080"
            - name: dataLakePlatformURL
              value: "http://{{ .Release.Name }}-{{ include "myapp.name" . }}-datalake:8080"
            - name: devPlatformURL
              value: "http://{{ .Release.Name }}-{{ include "myapp.name" . }}-dev:8080"
            - name: eventBusURLroot
              value: "{{ .Release.Name }}-kafka:9092"
          ports:
            - containerPort: 8888
          readinessProbe:
            tcpSocket:
              port: 8888
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 6
          resources: {}
      restartPolicy: Always

status: {}
...
